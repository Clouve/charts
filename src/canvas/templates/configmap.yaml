---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "canvas.fullname" . }}-config
  labels:
    {{- include "canvas.labels" . | nindent 4 }}
data:
  cache_store.yml: |
    cache_store: redis_cache_store

  database.yml: |
    production:
      adapter: postgresql
      encoding: utf8
      host: <%= ENV.fetch("POSTGRES_HOST") %>
      database: <%= ENV.fetch("POSTGRES_DB") %>
      username: <%= ENV.fetch("POSTGRES_USER") %>
      password: <%= ENV.fetch("POSTGRES_PASSWORD") %>

  delayed_jobs.yml: |
    default:
      workers:
        - queue: canvas_queue

  file_store.yml: |
    production:
      storage: local
      path_prefix: tmp/files

  redis.yml: |
    production:
      url:
        - redis://<%= ENV.fetch("REDIS_HOST") %>
      connect_timeout: 0.5
      circuit_breaker:
        error_threshold: 1
        error_timeout: 2

  security.yml: |
    production:
      encryption_key: <%= ENV.fetch("ENCRYPTION_KEY") %>

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "canvas.fullname" . }}-config-environments
  labels:
    {{- include "canvas.labels" . | nindent 4 }}
data:
  production-local.rb: |
    config.force_ssl = false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "canvas.fullname" . }}-env
  labels:
    {{- include "canvas.labels" . | nindent 4 }}
data:
  REDIS_HOST: "{{ include "canvas.fullname" . }}-redis-master"
  POSTGRES_HOST: "{{ include "canvas.fullname" . }}-postgresql"
  POSTGRES_DB: "{{ .Values.postgresql.auth.database }}"
  POSTGRES_USER: "{{ .Values.postgresql.auth.username }}"
  ENCRYPTION_KEY: "{{ .Values.canvasEncryptionKey }}"
  RAILS_HOST_WITH_PORT: "{{ .Values.canvasHostname }}"
  CANVAS_LMS_ACCOUNT_NAME: "{{ .Values.canvasLmsAccountName }}"
  CANVAS_LMS_ADMIN_EMAIL: "{{ .Values.canvasLmsAdminEmail }}"
  CANVAS_LMS_STATS_COLLECTION: "opt_out"
  NGINX_MAX_UPLOAD_SIZE: "50M"
  RAILS_ENV: "production"
  UPDATE_ENCRYPTION_KEY_HASH: "1"
